import pandas as pd
import numpy as np
from sklearn.model_selection import cross_val_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import train_test_split
from sklearn import tree
from collections import Counter

df = pd.read_csv("/Users/cram/Downloads/training_mush.csv")
X = df.drop(['class'], axis=1)
Y = df['class']
rf = RandomForestClassifier(random_state=0, criterion='entropy')
parametrs = {'n_estimators':[10,20,30,40,50], 'max_depth':[1,3,5,7,9,11], 'min_samples_leaf':[1,2,3,4,5,6,7], 'min_samples_split': [2,4,6,8]}
grid = GridSearchCV(rf,parametrs,cv=3, n_jobs = -1)
grid.fit(X, Y)
best_clf_es = grid.best_estimator_
best_clf = grid.best_params_
###############################################################################
invasion = pd.read_csv("/Users/cram/Downloads/invasion.csv")
operative_information = pd.read_csv("/Users/cram/Downloads/operative_information.csv")
x1 = invasion.drop(['class'], axis=1)
y1 = invasion['class']
rf_trans = RandomForestClassifier(criterion='entropy')
par = {'n_estimators':(1,20,1),'max_depth' : (1,13,2),'min_samples_leaf' :(1,8), 'min_samples_split' :(2,10,2)}
grid1 = GridSearchCV(rf_trans,par,cv=3, n_jobs = -1)
grid1.fit(x1, y1)
best_clf_estum = grid1.best_params_
operative_information=grid1.predict
s = pd.Series(operative_information).value_counts()
